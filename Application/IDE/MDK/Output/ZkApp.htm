<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Output\ZkApp.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Output\ZkApp.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Tue Dec 24 11:25:30 2019
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ZkPtlHandle &rArr; ZkPtlSetFrameData &rArr; ZkPtlLowlevelSendData &rArr; ZkPtlTransformFrame
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC0_IRQHandler</a> from drvadc.o(i.ADC0_IRQHandler) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[16]">CMP0_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[2f]">DefaultGetValue</a> from drvadc.o(i.DefaultGetValue) referenced from drvadc.o(i.DrvAdcInit)
 <LI><a href="#[2e]">DefaultISR</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(.text)
 <LI><a href="#[31]">DrvUart1SenCh</a> from drvuart.o(i.DrvUart1SenCh) referenced from app.o(i.HardwareInit)
 <LI><a href="#[30]">DrvUartInit</a> from drvuart.o(i.DrvUartInit) referenced from app.o(i.HardwareInit)
 <LI><a href="#[b]">FTFA_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[17]">FTM0_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[18]">FTM1_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[32]">GetPowerValue</a> from powermonitor.o(i.GetPowerValue) referenced from powermonitor.o(i.PowerMonitorInit)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[28]">LPI2C0_DriverIRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(.text)
 <LI><a href="#[e]">LPI2C0_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[1c]">LPIT0_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[29]">LPSPI0_DriverIRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(.text)
 <LI><a href="#[10]">LPSPI0_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[2a]">LPUART0_DriverIRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(.text)
 <LI><a href="#[12]">LPUART0_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[2b]">LPUART1_DriverIRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(.text)
 <LI><a href="#[13]">LPUART1_IRQHandler</a> from drvuart.o(i.LPUART1_IRQHandler) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[2c]">LPUART2_DriverIRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(.text)
 <LI><a href="#[14]">LPUART2_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[c]">LVD_LVW_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[2d]">MSCAN_DriverIRQHandler</a> from drvcan.o(i.MSCAN_DriverIRQHandler) referenced from startup_mke16z4.o(.text)
 <LI><a href="#[25]">MSCAN_ORed_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[24]">MSCAN_Rx_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[1f]">PDB0_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[d]">PORTAE_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[20]">PORTBCD_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[23]">PWT_LPTMR0_IRQHandler</a> from drvtimer.o(i.PWT_LPTMR0_IRQHandler) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[1a]">RTC_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[6]">Reserved16_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[7]">Reserved17_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[8]">Reserved18_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[9]">Reserved19_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[a]">Reserved20_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[f]">Reserved25_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[11]">Reserved27_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[19]">Reserved35_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[1b]">Reserved37_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[1d]">Reserved39_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[21]">SCG_RCM_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[1e]">TSI_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[22]">WDOG_EWM_IRQHandler</a> from startup_mke16z4.o(.text) referenced from startup_mke16z4.o(RESET)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mke16z4.o(.text)
 <LI><a href="#[33]">fputc</a> from debugmsg.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(.text)
</UL>
<P><STRONG><a name="[7f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[34]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[48]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[80]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[81]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[82]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[83]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[84]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>LPI2C0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>LPSPI0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>LPUART0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>LPUART2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>MSCAN_Rx_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>MSCAN_ORed_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(.text)
</UL>
<P><STRONG><a name="[b]"></a>FTFA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>FTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>FTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>LPI2C0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(.text)
</UL>
<P><STRONG><a name="[1c]"></a>LPIT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>LPSPI0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>LPUART0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>LPUART1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>LPUART2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>PDB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PORTAE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PORTBCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>Reserved16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>Reserved17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>Reserved18_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>Reserved19_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Reserved25_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>Reserved27_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>Reserved35_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>Reserved37_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>Reserved39_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SCG_RCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>WDOG_EWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mke16z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setModuloBaudRate
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAsyncClock
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSystemAdcHandle
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSystemAdcHandle
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSystemAdcHandle
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSystemAdcHandle
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkLiftHandle
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[86]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[39]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[41]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[45]"></a>AppHandle</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app.o(i.AppHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AppHandle &rArr; PowerSystemAdcHandle &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSystemAdcHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>DefaultGetValue</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drvadc.o(i.DefaultGetValue))
<BR>[Address Reference Count : 1]<UL><LI> drvadc.o(i.DrvAdcInit)
</UL>
<P><STRONG><a name="[87]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[47]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[35]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[88]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[89]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[8a]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[8b]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3f]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[15]"></a>ADC0_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drvadc.o(i.ADC0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DebugRegister</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, debugmsg.o(i.DebugRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DebugRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[4c]"></a>DoAutoCalibration</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, drvadc.o(i.DoAutoCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvAdcInit
</UL>

<P><STRONG><a name="[5c]"></a>DrvAdcGetValueFuncRegister</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, drvadc.o(i.DrvAdcGetValueFuncRegister))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerMonitorInit
</UL>

<P><STRONG><a name="[4a]"></a>DrvAdcInit</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, drvadc.o(i.DrvAdcInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DrvAdcInit &rArr; PeripheralClockSrcSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoAutoCalibration
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralClockSrcSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[61]"></a>DrvAdcTriggerConversion</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, drvadc.o(i.DrvAdcTriggerConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DrvAdcTriggerConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSystemAdcHandle
</UL>

<P><STRONG><a name="[5e]"></a>DrvAdcWorkStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drvadc.o(i.DrvAdcWorkStatus))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSystemAdcHandle
</UL>

<P><STRONG><a name="[57]"></a>DrvFlashInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, drvflash.o(i.DrvFlashInit))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[4e]"></a>DrvFlashWriteLongWord</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, drvflash.o(i.DrvFlashWriteLongWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DrvFlashWriteLongWord
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCommandSequence
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlHandle
</UL>

<P><STRONG><a name="[5d]"></a>DrvGetTimerMsTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drvtimer.o(i.DrvGetTimerMsTick))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSystemAdcHandle
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkLiftHandle
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInit
</UL>

<P><STRONG><a name="[50]"></a>DrvGpioSetPinMux</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, drvgpio.o(i.DrvGpioSetPinMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DrvGpioSetPinMux
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralClockEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerMonitorInit
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvUartInit
</UL>

<P><STRONG><a name="[71]"></a>DrvTickDelayMs</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drvtimer.o(i.DrvTickDelayMs))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlHandle
</UL>

<P><STRONG><a name="[52]"></a>DrvTimerInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, drvtimer.o(i.DrvTimerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DrvTimerInit &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralClockEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[31]"></a>DrvUart1SenCh</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, drvuart.o(i.DrvUart1SenCh))
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.HardwareInit)
</UL>
<P><STRONG><a name="[30]"></a>DrvUartInit</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, drvuart.o(i.DrvUartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = DrvUartInit &rArr; setModuloBaudRate &rArr; getAsyncClock &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGpioSetPinMux
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setModuloBaudRate
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralClockSrcSelect
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralClockEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.HardwareInit)
</UL>
<P><STRONG><a name="[7e]"></a>DrvWdtFeed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drvwdt.o(i.DrvWdtFeed))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>DrvWdtInit</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, drvwdt.o(i.DrvWdtInit))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>FlashCommandSequence</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, drvflash.o(i.FlashCommandSequence))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvFlashWriteLongWord
</UL>

<P><STRONG><a name="[32]"></a>GetPowerValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, powermonitor.o(i.GetPowerValue))
<BR>[Address Reference Count : 1]<UL><LI> powermonitor.o(i.PowerMonitorInit)
</UL>
<P><STRONG><a name="[64]"></a>GetSystemPower</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, powermonitor.o(i.GetSystemPower))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkLiftHandle
</UL>

<P><STRONG><a name="[56]"></a>HardwareInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app.o(i.HardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HardwareInit &rArr; DrvAdcInit &rArr; PeripheralClockSrcSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimerInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvFlashInit
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvAdcInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, drvuart.o(i.LPUART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPUART1_IRQHandler &rArr; ZkPtlLowlevelRecCh
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlLowlevelRecCh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>MSCAN_DriverIRQHandler</STRONG> (Thumb, 398 bytes, Stack size 16 bytes, drvcan.o(i.MSCAN_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MSCAN_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>PWT_LPTMR0_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, drvtimer.o(i.PWT_LPTMR0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mke16z4.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>PeripheralClockEnable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system.o(i.PeripheralClockEnable))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGpioSetPinMux
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvUartInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimerInit
</UL>

<P><STRONG><a name="[4b]"></a>PeripheralClockSrcSelect</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, system.o(i.PeripheralClockSrcSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PeripheralClockSrcSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvUartInit
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvAdcInit
</UL>

<P><STRONG><a name="[5b]"></a>PowerMonitorInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, powermonitor.o(i.PowerMonitorInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PowerMonitorInit &rArr; DrvGpioSetPinMux
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvAdcGetValueFuncRegister
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGpioSetPinMux
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInit
</UL>

<P><STRONG><a name="[46]"></a>PowerSystemAdcHandle</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, powermonitor.o(i.PowerSystemAdcHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = PowerSystemAdcHandle &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvAdcWorkStatus
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvAdcTriggerConversion
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGetTimerMsTick
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHandle
</UL>

<P><STRONG><a name="[62]"></a>SoftwareInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app.o(i.SoftwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SoftwareInit &rArr; PowerMonitorInit &rArr; DrvGpioSetPinMux
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerMonitorInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGetTimerMsTick
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>ZkLiftHandle</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app.o(i.ZkLiftHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ZkLiftHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemPower
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGetTimerMsTick
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>ZkMemCpy</STRONG> (Thumb, 28 bytes, Stack size 20 bytes, zkptllowlevel.o(i.ZkMemCpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ZkMemCpy
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlLowlevelSendData
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlCopyFrameData
</UL>

<P><STRONG><a name="[67]"></a>ZkPtlCopyFrameData</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, zkptl.o(i.ZkPtlCopyFrameData))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ZkPtlCopyFrameData &rArr; ZkMemCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkMemCpy
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlGetFrameDatLen
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlHandle
</UL>

<P><STRONG><a name="[68]"></a>ZkPtlGetFrameDatLen</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, zkptl.o(i.ZkPtlGetFrameDatLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ZkPtlGetFrameDatLen &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlSetFrameData
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlCopyFrameData
</UL>

<P><STRONG><a name="[6b]"></a>ZkPtlGetLowlevelFrame</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, zkptllowlevel.o(i.ZkPtlGetLowlevelFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ZkPtlGetLowlevelFrame &rArr; ZkPtlRecoverFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtltVerify
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlRecoverFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlMonitor
</UL>

<P><STRONG><a name="[6e]"></a>ZkPtlHandle</STRONG> (Thumb, 112 bytes, Stack size 80 bytes, app.o(i.ZkPtlHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ZkPtlHandle &rArr; ZkPtlSetFrameData &rArr; ZkPtlLowlevelSendData &rArr; ZkPtlTransformFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlSetFrameData
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlMonitor
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlCopyFrameData
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTickDelayMs
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvFlashWriteLongWord
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>ZkPtlHwSendData</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, drvuart.o(i.ZkPtlHwSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ZkPtlHwSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlLowlevelSendData
</UL>

<P><STRONG><a name="[59]"></a>ZkPtlInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, zkptl.o(i.ZkPtlInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ZkPtlInit
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlLowlevelInit
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[72]"></a>ZkPtlLowlevelInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, zkptllowlevel.o(i.ZkPtlLowlevelInit))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlInit
</UL>

<P><STRONG><a name="[5a]"></a>ZkPtlLowlevelRecCh</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, zkptllowlevel.o(i.ZkPtlLowlevelRecCh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ZkPtlLowlevelRecCh
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>ZkPtlLowlevelSendData</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, zkptllowlevel.o(i.ZkPtlLowlevelSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ZkPtlLowlevelSendData &rArr; ZkPtlTransformFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtltVerify
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlTransformFrame
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkMemCpy
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlHwSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlSetFrameData
</UL>

<P><STRONG><a name="[6f]"></a>ZkPtlMonitor</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, zkptl.o(i.ZkPtlMonitor))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ZkPtlMonitor &rArr; ZkPtlGetLowlevelFrame &rArr; ZkPtlRecoverFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlGetLowlevelFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlHandle
</UL>

<P><STRONG><a name="[6c]"></a>ZkPtlRecoverFrame</STRONG> (Thumb, 100 bytes, Stack size 20 bytes, zkptllowlevel.o(i.ZkPtlRecoverFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ZkPtlRecoverFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlGetLowlevelFrame
</UL>

<P><STRONG><a name="[70]"></a>ZkPtlSetFrameData</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, zkptl.o(i.ZkPtlSetFrameData))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ZkPtlSetFrameData &rArr; ZkPtlLowlevelSendData &rArr; ZkPtlTransformFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlLowlevelSendData
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlGetFrameDatLen
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlHandle
</UL>

<P><STRONG><a name="[74]"></a>ZkPtlTransformFrame</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, zkptllowlevel.o(i.ZkPtlTransformFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ZkPtlTransformFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlLowlevelSendData
</UL>

<P><STRONG><a name="[6d]"></a>ZkPtltVerify</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, zkptllowlevel.o(i.ZkPtltVerify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ZkPtltVerify
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlLowlevelSendData
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlGetLowlevelFrame
</UL>

<P><STRONG><a name="[76]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8c]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[66]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkLiftHandle
</UL>

<P><STRONG><a name="[8d]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[8e]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[49]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[6a]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, zkptl.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlGetFrameDatLen
</UL>

<P><STRONG><a name="[8f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[90]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[33]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, debugmsg.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[7c]"></a>getAsyncClock</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, system.o(i.getAsyncClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = getAsyncClock &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setModuloBaudRate
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main &rArr; ZkPtlHandle &rArr; ZkPtlSetFrameData &rArr; ZkPtlLowlevelSendData &rArr; ZkPtlTransformFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkPtlHandle
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZkLiftHandle
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInit
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvWdtInit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvWdtFeed
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[54]"></a>setModuloBaudRate</STRONG> (Thumb, 242 bytes, Stack size 56 bytes, drvuart.o(i.setModuloBaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = setModuloBaudRate &rArr; getAsyncClock &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAsyncClock
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvUartInit
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[53]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, drvtimer.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimerInit
</UL>

<P><STRONG><a name="[55]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, drvuart.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvUartInit
</UL>

<P><STRONG><a name="[4d]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, drvadc.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvAdcInit
</UL>

<P><STRONG><a name="[78]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[77]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[7b]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7a]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
